{
  "test_run": {
    "start_time": "2025-06-02T17:31:32.402912",
    "end_time": "2025-06-02T17:31:36.814693",
    "summary": {
      "test_case_name": "",
      "node_id": "cherryzhoudeMacBook-Air.local-21897",
      "total": 275,
      "passed": 240,
      "failed": 35,
      "pass_rate": 0.8727272727272727,
      "total_time": 86.72800898551941,
      "start_time": "2025-06-02T17:31:32.402817",
      "end_time": "2025-06-02T17:31:36.804796"
    },
    "name": "默认测试套件",
    "test_count": 13
  },
  "nodes": {
    "node-1-612a791f": {
      "start_time": "2025-06-02T17:31:32.404840",
      "test_count": 13,
      "status": "已完成",
      "end_time": "2025-06-02T17:31:36.730340",
      "summary": {
        "test_case_name": "默认测试套件-node-1-612a791f",
        "node_id": "node-1-612a791f",
        "total": 55,
        "passed": 48,
        "failed": 7,
        "pass_rate": 0.8727272727272727,
        "total_time": 16.803906679153442,
        "start_time": "2025-06-02T17:31:32.405214",
        "end_time": "2025-06-02T17:31:36.730219"
      }
    },
    "node-2-72d24072": {
      "start_time": "2025-06-02T17:31:32.404954",
      "test_count": 13,
      "status": "已完成",
      "end_time": "2025-06-02T17:31:36.224054",
      "summary": {
        "test_case_name": "默认测试套件-node-2-72d24072",
        "node_id": "node-2-72d24072",
        "total": 55,
        "passed": 48,
        "failed": 7,
        "pass_rate": 0.8727272727272727,
        "total_time": 15.166579484939575,
        "start_time": "2025-06-02T17:31:32.405332",
        "end_time": "2025-06-02T17:31:36.223870"
      }
    },
    "node-3-6a20cebc": {
      "start_time": "2025-06-02T17:31:32.405117",
      "test_count": 13,
      "status": "已完成",
      "end_time": "2025-06-02T17:31:36.802467",
      "summary": {
        "test_case_name": "默认测试套件-node-3-6a20cebc",
        "node_id": "node-3-6a20cebc",
        "total": 55,
        "passed": 48,
        "failed": 7,
        "pass_rate": 0.8727272727272727,
        "total_time": 18.27100372314453,
        "start_time": "2025-06-02T17:31:32.405420",
        "end_time": "2025-06-02T17:31:36.802377"
      }
    },
    "node-4-78c08ff2": {
      "start_time": "2025-06-02T17:31:32.405244",
      "test_count": 13,
      "status": "已完成",
      "end_time": "2025-06-02T17:31:36.606242",
      "summary": {
        "test_case_name": "默认测试套件-node-4-78c08ff2",
        "node_id": "node-4-78c08ff2",
        "total": 55,
        "passed": 48,
        "failed": 7,
        "pass_rate": 0.8727272727272727,
        "total_time": 18.767091274261475,
        "start_time": "2025-06-02T17:31:32.405472",
        "end_time": "2025-06-02T17:31:36.606120"
      }
    },
    "node-5-89d89abe": {
      "start_time": "2025-06-02T17:31:32.405504",
      "test_count": 13,
      "status": "已完成",
      "end_time": "2025-06-02T17:31:36.418078",
      "summary": {
        "test_case_name": "默认测试套件-node-5-89d89abe",
        "node_id": "node-5-89d89abe",
        "total": 55,
        "passed": 48,
        "failed": 7,
        "pass_rate": 0.8727272727272727,
        "total_time": 17.719427824020386,
        "start_time": "2025-06-02T17:31:32.405641",
        "end_time": "2025-06-02T17:31:36.417953"
      }
    }
  },
  "test_results": [
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.2219088077545166,
      "start_time": "2025-06-02T17:31:32.405440",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.2219088077545166,
      "start_time": "2025-06-02T17:31:32.405440",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.4516298770904541,
      "start_time": "2025-06-02T17:31:32.627383",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.2219088077545166,
      "start_time": "2025-06-02T17:31:32.405440",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.4516298770904541,
      "start_time": "2025-06-02T17:31:32.627383",
      "additional_data": {}
    },
    {
      "method_name": "test_multiplication",
      "success": true,
      "error_message": null,
      "execution_time": 0.2808980941772461,
      "start_time": "2025-06-02T17:31:33.079050",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.2219088077545166,
      "start_time": "2025-06-02T17:31:32.405440",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.4516298770904541,
      "start_time": "2025-06-02T17:31:32.627383",
      "additional_data": {}
    },
    {
      "method_name": "test_multiplication",
      "success": true,
      "error_message": null,
      "execution_time": 0.2808980941772461,
      "start_time": "2025-06-02T17:31:33.079050",
      "additional_data": {}
    },
    {
      "method_name": "test_subtraction",
      "success": true,
      "error_message": null,
      "execution_time": 0.22107481956481934,
      "start_time": "2025-06-02T17:31:33.359980",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.43125414848327637,
      "start_time": "2025-06-02T17:31:33.581222",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.43125414848327637,
      "start_time": "2025-06-02T17:31:33.581222",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.14867925643920898,
      "start_time": "2025-06-02T17:31:34.012498",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.43125414848327637,
      "start_time": "2025-06-02T17:31:33.581222",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.14867925643920898,
      "start_time": "2025-06-02T17:31:34.012498",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.3142430782318115,
      "start_time": "2025-06-02T17:31:34.161209",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.43125414848327637,
      "start_time": "2025-06-02T17:31:33.581222",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.14867925643920898,
      "start_time": "2025-06-02T17:31:34.012498",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.3142430782318115,
      "start_time": "2025-06-02T17:31:34.161209",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.11182308197021484,
      "start_time": "2025-06-02T17:31:34.476301",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.43125414848327637,
      "start_time": "2025-06-02T17:31:33.581222",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.14867925643920898,
      "start_time": "2025-06-02T17:31:34.012498",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.3142430782318115,
      "start_time": "2025-06-02T17:31:34.161209",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.11182308197021484,
      "start_time": "2025-06-02T17:31:34.476301",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.15378499031066895,
      "start_time": "2025-06-02T17:31:34.588160",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.43125414848327637,
      "start_time": "2025-06-02T17:31:33.581222",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.14867925643920898,
      "start_time": "2025-06-02T17:31:34.012498",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.3142430782318115,
      "start_time": "2025-06-02T17:31:34.161209",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.11182308197021484,
      "start_time": "2025-06-02T17:31:34.476301",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.15378499031066895,
      "start_time": "2025-06-02T17:31:34.588160",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.19219517707824707,
      "start_time": "2025-06-02T17:31:34.741983",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.43125414848327637,
      "start_time": "2025-06-02T17:31:33.581222",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.14867925643920898,
      "start_time": "2025-06-02T17:31:34.012498",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.3142430782318115,
      "start_time": "2025-06-02T17:31:34.161209",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.11182308197021484,
      "start_time": "2025-06-02T17:31:34.476301",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.15378499031066895,
      "start_time": "2025-06-02T17:31:34.588160",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.19219517707824707,
      "start_time": "2025-06-02T17:31:34.741983",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.45378923416137695,
      "start_time": "2025-06-02T17:31:34.934219",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.43125414848327637,
      "start_time": "2025-06-02T17:31:33.581222",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.14867925643920898,
      "start_time": "2025-06-02T17:31:34.012498",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.3142430782318115,
      "start_time": "2025-06-02T17:31:34.161209",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.11182308197021484,
      "start_time": "2025-06-02T17:31:34.476301",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.15378499031066895,
      "start_time": "2025-06-02T17:31:34.588160",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.19219517707824707,
      "start_time": "2025-06-02T17:31:34.741983",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.45378923416137695,
      "start_time": "2025-06-02T17:31:34.934219",
      "additional_data": {}
    },
    {
      "method_name": "test_startswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.46500706672668457,
      "start_time": "2025-06-02T17:31:35.388041",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.43125414848327637,
      "start_time": "2025-06-02T17:31:33.581222",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.14867925643920898,
      "start_time": "2025-06-02T17:31:34.012498",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.3142430782318115,
      "start_time": "2025-06-02T17:31:34.161209",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.11182308197021484,
      "start_time": "2025-06-02T17:31:34.476301",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.15378499031066895,
      "start_time": "2025-06-02T17:31:34.588160",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.19219517707824707,
      "start_time": "2025-06-02T17:31:34.741983",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.45378923416137695,
      "start_time": "2025-06-02T17:31:34.934219",
      "additional_data": {}
    },
    {
      "method_name": "test_startswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.46500706672668457,
      "start_time": "2025-06-02T17:31:35.388041",
      "additional_data": {}
    },
    {
      "method_name": "test_uppercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.37073469161987305,
      "start_time": "2025-06-02T17:31:35.853081",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.10831618309020996,
      "start_time": "2025-06-02T17:31:32.405659",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.10831618309020996,
      "start_time": "2025-06-02T17:31:32.405659",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.477435827255249,
      "start_time": "2025-06-02T17:31:32.514024",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.10831618309020996,
      "start_time": "2025-06-02T17:31:32.405659",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.477435827255249,
      "start_time": "2025-06-02T17:31:32.514024",
      "additional_data": {}
    },
    {
      "method_name": "test_multiplication",
      "success": true,
      "error_message": null,
      "execution_time": 0.19188475608825684,
      "start_time": "2025-06-02T17:31:32.991495",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.10831618309020996,
      "start_time": "2025-06-02T17:31:32.405659",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.477435827255249,
      "start_time": "2025-06-02T17:31:32.514024",
      "additional_data": {}
    },
    {
      "method_name": "test_multiplication",
      "success": true,
      "error_message": null,
      "execution_time": 0.19188475608825684,
      "start_time": "2025-06-02T17:31:32.991495",
      "additional_data": {}
    },
    {
      "method_name": "test_subtraction",
      "success": true,
      "error_message": null,
      "execution_time": 0.30919480323791504,
      "start_time": "2025-06-02T17:31:33.183407",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.3240220546722412,
      "start_time": "2025-06-02T17:31:33.492985",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.3240220546722412,
      "start_time": "2025-06-02T17:31:33.492985",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.48610401153564453,
      "start_time": "2025-06-02T17:31:33.817034",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.3240220546722412,
      "start_time": "2025-06-02T17:31:33.492985",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.48610401153564453,
      "start_time": "2025-06-02T17:31:33.817034",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.29903531074523926,
      "start_time": "2025-06-02T17:31:34.303143",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.3240220546722412,
      "start_time": "2025-06-02T17:31:33.492985",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.48610401153564453,
      "start_time": "2025-06-02T17:31:33.817034",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.29903531074523926,
      "start_time": "2025-06-02T17:31:34.303143",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.27042412757873535,
      "start_time": "2025-06-02T17:31:34.602354",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.3240220546722412,
      "start_time": "2025-06-02T17:31:33.492985",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.48610401153564453,
      "start_time": "2025-06-02T17:31:33.817034",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.29903531074523926,
      "start_time": "2025-06-02T17:31:34.303143",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.27042412757873535,
      "start_time": "2025-06-02T17:31:34.602354",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.3101329803466797,
      "start_time": "2025-06-02T17:31:34.872827",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.3240220546722412,
      "start_time": "2025-06-02T17:31:33.492985",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.48610401153564453,
      "start_time": "2025-06-02T17:31:33.817034",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.29903531074523926,
      "start_time": "2025-06-02T17:31:34.303143",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.27042412757873535,
      "start_time": "2025-06-02T17:31:34.602354",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.3101329803466797,
      "start_time": "2025-06-02T17:31:34.872827",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.23018503189086914,
      "start_time": "2025-06-02T17:31:35.182998",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.3240220546722412,
      "start_time": "2025-06-02T17:31:33.492985",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.48610401153564453,
      "start_time": "2025-06-02T17:31:33.817034",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.29903531074523926,
      "start_time": "2025-06-02T17:31:34.303143",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.27042412757873535,
      "start_time": "2025-06-02T17:31:34.602354",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.3101329803466797,
      "start_time": "2025-06-02T17:31:34.872827",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.23018503189086914,
      "start_time": "2025-06-02T17:31:35.182998",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.44261884689331055,
      "start_time": "2025-06-02T17:31:35.413208",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.3240220546722412,
      "start_time": "2025-06-02T17:31:33.492985",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.48610401153564453,
      "start_time": "2025-06-02T17:31:33.817034",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.29903531074523926,
      "start_time": "2025-06-02T17:31:34.303143",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.27042412757873535,
      "start_time": "2025-06-02T17:31:34.602354",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.3101329803466797,
      "start_time": "2025-06-02T17:31:34.872827",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.23018503189086914,
      "start_time": "2025-06-02T17:31:35.182998",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.44261884689331055,
      "start_time": "2025-06-02T17:31:35.413208",
      "additional_data": {}
    },
    {
      "method_name": "test_startswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.27876806259155273,
      "start_time": "2025-06-02T17:31:35.855848",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.3240220546722412,
      "start_time": "2025-06-02T17:31:33.492985",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.48610401153564453,
      "start_time": "2025-06-02T17:31:33.817034",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.29903531074523926,
      "start_time": "2025-06-02T17:31:34.303143",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.27042412757873535,
      "start_time": "2025-06-02T17:31:34.602354",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.3101329803466797,
      "start_time": "2025-06-02T17:31:34.872827",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.23018503189086914,
      "start_time": "2025-06-02T17:31:35.182998",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.44261884689331055,
      "start_time": "2025-06-02T17:31:35.413208",
      "additional_data": {}
    },
    {
      "method_name": "test_startswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.27876806259155273,
      "start_time": "2025-06-02T17:31:35.855848",
      "additional_data": {}
    },
    {
      "method_name": "test_uppercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.28327107429504395,
      "start_time": "2025-06-02T17:31:36.134651",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.14154601097106934,
      "start_time": "2025-06-02T17:31:32.405568",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.14154601097106934,
      "start_time": "2025-06-02T17:31:32.405568",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.37271690368652344,
      "start_time": "2025-06-02T17:31:32.547141",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.14154601097106934,
      "start_time": "2025-06-02T17:31:32.405568",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.37271690368652344,
      "start_time": "2025-06-02T17:31:32.547141",
      "additional_data": {}
    },
    {
      "method_name": "test_multiplication",
      "success": true,
      "error_message": null,
      "execution_time": 0.45120692253112793,
      "start_time": "2025-06-02T17:31:32.919898",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.14154601097106934,
      "start_time": "2025-06-02T17:31:32.405568",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.37271690368652344,
      "start_time": "2025-06-02T17:31:32.547141",
      "additional_data": {}
    },
    {
      "method_name": "test_multiplication",
      "success": true,
      "error_message": null,
      "execution_time": 0.45120692253112793,
      "start_time": "2025-06-02T17:31:32.919898",
      "additional_data": {}
    },
    {
      "method_name": "test_subtraction",
      "success": true,
      "error_message": null,
      "execution_time": 0.1274852752685547,
      "start_time": "2025-06-02T17:31:33.371125",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.4083738327026367,
      "start_time": "2025-06-02T17:31:33.498843",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.4083738327026367,
      "start_time": "2025-06-02T17:31:33.498843",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.38335204124450684,
      "start_time": "2025-06-02T17:31:33.907256",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.4083738327026367,
      "start_time": "2025-06-02T17:31:33.498843",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.38335204124450684,
      "start_time": "2025-06-02T17:31:33.907256",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.2131638526916504,
      "start_time": "2025-06-02T17:31:34.290630",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.4083738327026367,
      "start_time": "2025-06-02T17:31:33.498843",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.38335204124450684,
      "start_time": "2025-06-02T17:31:33.907256",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.2131638526916504,
      "start_time": "2025-06-02T17:31:34.290630",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.34149885177612305,
      "start_time": "2025-06-02T17:31:34.504186",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.4083738327026367,
      "start_time": "2025-06-02T17:31:33.498843",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.38335204124450684,
      "start_time": "2025-06-02T17:31:33.907256",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.2131638526916504,
      "start_time": "2025-06-02T17:31:34.290630",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.34149885177612305,
      "start_time": "2025-06-02T17:31:34.504186",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.45370006561279297,
      "start_time": "2025-06-02T17:31:34.845806",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.4083738327026367,
      "start_time": "2025-06-02T17:31:33.498843",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.38335204124450684,
      "start_time": "2025-06-02T17:31:33.907256",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.2131638526916504,
      "start_time": "2025-06-02T17:31:34.290630",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.34149885177612305,
      "start_time": "2025-06-02T17:31:34.504186",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.45370006561279297,
      "start_time": "2025-06-02T17:31:34.845806",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.4835999011993408,
      "start_time": "2025-06-02T17:31:35.299536",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.4083738327026367,
      "start_time": "2025-06-02T17:31:33.498843",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.38335204124450684,
      "start_time": "2025-06-02T17:31:33.907256",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.2131638526916504,
      "start_time": "2025-06-02T17:31:34.290630",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.34149885177612305,
      "start_time": "2025-06-02T17:31:34.504186",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.45370006561279297,
      "start_time": "2025-06-02T17:31:34.845806",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.4835999011993408,
      "start_time": "2025-06-02T17:31:35.299536",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.14572787284851074,
      "start_time": "2025-06-02T17:31:35.783163",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.4083738327026367,
      "start_time": "2025-06-02T17:31:33.498843",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.38335204124450684,
      "start_time": "2025-06-02T17:31:33.907256",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.2131638526916504,
      "start_time": "2025-06-02T17:31:34.290630",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.34149885177612305,
      "start_time": "2025-06-02T17:31:34.504186",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.45370006561279297,
      "start_time": "2025-06-02T17:31:34.845806",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.4835999011993408,
      "start_time": "2025-06-02T17:31:35.299536",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.14572787284851074,
      "start_time": "2025-06-02T17:31:35.783163",
      "additional_data": {}
    },
    {
      "method_name": "test_startswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.4523329734802246,
      "start_time": "2025-06-02T17:31:35.928908",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.4083738327026367,
      "start_time": "2025-06-02T17:31:33.498843",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.38335204124450684,
      "start_time": "2025-06-02T17:31:33.907256",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.2131638526916504,
      "start_time": "2025-06-02T17:31:34.290630",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.34149885177612305,
      "start_time": "2025-06-02T17:31:34.504186",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.45370006561279297,
      "start_time": "2025-06-02T17:31:34.845806",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.4835999011993408,
      "start_time": "2025-06-02T17:31:35.299536",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.14572787284851074,
      "start_time": "2025-06-02T17:31:35.783163",
      "additional_data": {}
    },
    {
      "method_name": "test_startswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.4523329734802246,
      "start_time": "2025-06-02T17:31:35.928908",
      "additional_data": {}
    },
    {
      "method_name": "test_uppercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.22478699684143066,
      "start_time": "2025-06-02T17:31:36.381283",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.43221497535705566,
      "start_time": "2025-06-02T17:31:32.405371",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.43221497535705566,
      "start_time": "2025-06-02T17:31:32.405371",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.24701380729675293,
      "start_time": "2025-06-02T17:31:32.837638",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.43221497535705566,
      "start_time": "2025-06-02T17:31:32.405371",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.24701380729675293,
      "start_time": "2025-06-02T17:31:32.837638",
      "additional_data": {}
    },
    {
      "method_name": "test_multiplication",
      "success": true,
      "error_message": null,
      "execution_time": 0.4773399829864502,
      "start_time": "2025-06-02T17:31:33.084676",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.43221497535705566,
      "start_time": "2025-06-02T17:31:32.405371",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.24701380729675293,
      "start_time": "2025-06-02T17:31:32.837638",
      "additional_data": {}
    },
    {
      "method_name": "test_multiplication",
      "success": true,
      "error_message": null,
      "execution_time": 0.4773399829864502,
      "start_time": "2025-06-02T17:31:33.084676",
      "additional_data": {}
    },
    {
      "method_name": "test_subtraction",
      "success": true,
      "error_message": null,
      "execution_time": 0.19121527671813965,
      "start_time": "2025-06-02T17:31:33.562048",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.13081598281860352,
      "start_time": "2025-06-02T17:31:33.753543",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.13081598281860352,
      "start_time": "2025-06-02T17:31:33.753543",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.16674280166625977,
      "start_time": "2025-06-02T17:31:33.884402",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.13081598281860352,
      "start_time": "2025-06-02T17:31:33.753543",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.16674280166625977,
      "start_time": "2025-06-02T17:31:33.884402",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.24897384643554688,
      "start_time": "2025-06-02T17:31:34.051152",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.13081598281860352,
      "start_time": "2025-06-02T17:31:33.753543",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.16674280166625977,
      "start_time": "2025-06-02T17:31:33.884402",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.24897384643554688,
      "start_time": "2025-06-02T17:31:34.051152",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.49526095390319824,
      "start_time": "2025-06-02T17:31:34.301211",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.13081598281860352,
      "start_time": "2025-06-02T17:31:33.753543",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.16674280166625977,
      "start_time": "2025-06-02T17:31:33.884402",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.24897384643554688,
      "start_time": "2025-06-02T17:31:34.051152",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.49526095390319824,
      "start_time": "2025-06-02T17:31:34.301211",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.49360108375549316,
      "start_time": "2025-06-02T17:31:34.796521",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.13081598281860352,
      "start_time": "2025-06-02T17:31:33.753543",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.16674280166625977,
      "start_time": "2025-06-02T17:31:33.884402",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.24897384643554688,
      "start_time": "2025-06-02T17:31:34.051152",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.49526095390319824,
      "start_time": "2025-06-02T17:31:34.301211",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.49360108375549316,
      "start_time": "2025-06-02T17:31:34.796521",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.4914367198944092,
      "start_time": "2025-06-02T17:31:35.290164",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.13081598281860352,
      "start_time": "2025-06-02T17:31:33.753543",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.16674280166625977,
      "start_time": "2025-06-02T17:31:33.884402",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.24897384643554688,
      "start_time": "2025-06-02T17:31:34.051152",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.49526095390319824,
      "start_time": "2025-06-02T17:31:34.301211",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.49360108375549316,
      "start_time": "2025-06-02T17:31:34.796521",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.4914367198944092,
      "start_time": "2025-06-02T17:31:35.290164",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.10514712333679199,
      "start_time": "2025-06-02T17:31:35.781643",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.13081598281860352,
      "start_time": "2025-06-02T17:31:33.753543",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.16674280166625977,
      "start_time": "2025-06-02T17:31:33.884402",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.24897384643554688,
      "start_time": "2025-06-02T17:31:34.051152",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.49526095390319824,
      "start_time": "2025-06-02T17:31:34.301211",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.49360108375549316,
      "start_time": "2025-06-02T17:31:34.796521",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.4914367198944092,
      "start_time": "2025-06-02T17:31:35.290164",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.10514712333679199,
      "start_time": "2025-06-02T17:31:35.781643",
      "additional_data": {}
    },
    {
      "method_name": "test_startswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.36991190910339355,
      "start_time": "2025-06-02T17:31:35.886812",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.13081598281860352,
      "start_time": "2025-06-02T17:31:33.753543",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.16674280166625977,
      "start_time": "2025-06-02T17:31:33.884402",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.24897384643554688,
      "start_time": "2025-06-02T17:31:34.051152",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.49526095390319824,
      "start_time": "2025-06-02T17:31:34.301211",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.49360108375549316,
      "start_time": "2025-06-02T17:31:34.796521",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.4914367198944092,
      "start_time": "2025-06-02T17:31:35.290164",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.10514712333679199,
      "start_time": "2025-06-02T17:31:35.781643",
      "additional_data": {}
    },
    {
      "method_name": "test_startswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.36991190910339355,
      "start_time": "2025-06-02T17:31:35.886812",
      "additional_data": {}
    },
    {
      "method_name": "test_uppercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.47342371940612793,
      "start_time": "2025-06-02T17:31:36.256740",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.22748804092407227,
      "start_time": "2025-06-02T17:31:32.405548",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.22748804092407227,
      "start_time": "2025-06-02T17:31:32.405548",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.39163994789123535,
      "start_time": "2025-06-02T17:31:32.633072",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.22748804092407227,
      "start_time": "2025-06-02T17:31:32.405548",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.39163994789123535,
      "start_time": "2025-06-02T17:31:32.633072",
      "additional_data": {}
    },
    {
      "method_name": "test_multiplication",
      "success": true,
      "error_message": null,
      "execution_time": 0.36191725730895996,
      "start_time": "2025-06-02T17:31:33.024758",
      "additional_data": {}
    },
    {
      "method_name": "test_addition",
      "success": true,
      "error_message": null,
      "execution_time": 0.22748804092407227,
      "start_time": "2025-06-02T17:31:32.405548",
      "additional_data": {}
    },
    {
      "method_name": "test_division",
      "success": true,
      "error_message": null,
      "execution_time": 0.39163994789123535,
      "start_time": "2025-06-02T17:31:32.633072",
      "additional_data": {}
    },
    {
      "method_name": "test_multiplication",
      "success": true,
      "error_message": null,
      "execution_time": 0.36191725730895996,
      "start_time": "2025-06-02T17:31:33.024758",
      "additional_data": {}
    },
    {
      "method_name": "test_subtraction",
      "success": true,
      "error_message": null,
      "execution_time": 0.25938987731933594,
      "start_time": "2025-06-02T17:31:33.386699",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.2783019542694092,
      "start_time": "2025-06-02T17:31:33.646249",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.2783019542694092,
      "start_time": "2025-06-02T17:31:33.646249",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.4548149108886719,
      "start_time": "2025-06-02T17:31:33.924614",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.2783019542694092,
      "start_time": "2025-06-02T17:31:33.646249",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.4548149108886719,
      "start_time": "2025-06-02T17:31:33.924614",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.2156510353088379,
      "start_time": "2025-06-02T17:31:34.379449",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.2783019542694092,
      "start_time": "2025-06-02T17:31:33.646249",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.4548149108886719,
      "start_time": "2025-06-02T17:31:33.924614",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.2156510353088379,
      "start_time": "2025-06-02T17:31:34.379449",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.31642603874206543,
      "start_time": "2025-06-02T17:31:34.595413",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.2783019542694092,
      "start_time": "2025-06-02T17:31:33.646249",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.4548149108886719,
      "start_time": "2025-06-02T17:31:33.924614",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.2156510353088379,
      "start_time": "2025-06-02T17:31:34.379449",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.31642603874206543,
      "start_time": "2025-06-02T17:31:34.595413",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.432373046875,
      "start_time": "2025-06-02T17:31:34.911889",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.2783019542694092,
      "start_time": "2025-06-02T17:31:33.646249",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.4548149108886719,
      "start_time": "2025-06-02T17:31:33.924614",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.2156510353088379,
      "start_time": "2025-06-02T17:31:34.379449",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.31642603874206543,
      "start_time": "2025-06-02T17:31:34.595413",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.432373046875,
      "start_time": "2025-06-02T17:31:34.911889",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.26041603088378906,
      "start_time": "2025-06-02T17:31:35.344298",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.2783019542694092,
      "start_time": "2025-06-02T17:31:33.646249",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.4548149108886719,
      "start_time": "2025-06-02T17:31:33.924614",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.2156510353088379,
      "start_time": "2025-06-02T17:31:34.379449",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.31642603874206543,
      "start_time": "2025-06-02T17:31:34.595413",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.432373046875,
      "start_time": "2025-06-02T17:31:34.911889",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.26041603088378906,
      "start_time": "2025-06-02T17:31:35.344298",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.43752598762512207,
      "start_time": "2025-06-02T17:31:35.604754",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.2783019542694092,
      "start_time": "2025-06-02T17:31:33.646249",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.4548149108886719,
      "start_time": "2025-06-02T17:31:33.924614",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.2156510353088379,
      "start_time": "2025-06-02T17:31:34.379449",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.31642603874206543,
      "start_time": "2025-06-02T17:31:34.595413",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.432373046875,
      "start_time": "2025-06-02T17:31:34.911889",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.26041603088378906,
      "start_time": "2025-06-02T17:31:35.344298",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.43752598762512207,
      "start_time": "2025-06-02T17:31:35.604754",
      "additional_data": {}
    },
    {
      "method_name": "test_startswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.37546324729919434,
      "start_time": "2025-06-02T17:31:36.042303",
      "additional_data": {}
    },
    {
      "method_name": "test_contains",
      "success": true,
      "error_message": null,
      "execution_time": 0.2783019542694092,
      "start_time": "2025-06-02T17:31:33.646249",
      "additional_data": {}
    },
    {
      "method_name": "test_endswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.4548149108886719,
      "start_time": "2025-06-02T17:31:33.924614",
      "additional_data": {}
    },
    {
      "method_name": "test_failure_example",
      "success": false,
      "error_message": "AssertionError: 断言失败: Hello, World! != Wrong value\nTraceback (most recent call last):\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 85, in run_test_method\n    method()\n  File \"/Users/cherryzhou/code/auto_test/examples/sample_test.py\", line 115, in test_failure_example\n    self.assert_equal(self.test_string, \"Wrong value\")\n  File \"/Users/cherryzhou/code/auto_test/disttest/core/test_case.py\", line 44, in assert_equal\n    raise AssertionError(msg)\nAssertionError: 断言失败: Hello, World! != Wrong value\n",
      "execution_time": 0.2156510353088379,
      "start_time": "2025-06-02T17:31:34.379449",
      "additional_data": {}
    },
    {
      "method_name": "test_length",
      "success": true,
      "error_message": null,
      "execution_time": 0.31642603874206543,
      "start_time": "2025-06-02T17:31:34.595413",
      "additional_data": {}
    },
    {
      "method_name": "test_lowercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.432373046875,
      "start_time": "2025-06-02T17:31:34.911889",
      "additional_data": {}
    },
    {
      "method_name": "test_replace",
      "success": true,
      "error_message": null,
      "execution_time": 0.26041603088378906,
      "start_time": "2025-06-02T17:31:35.344298",
      "additional_data": {}
    },
    {
      "method_name": "test_split",
      "success": true,
      "error_message": null,
      "execution_time": 0.43752598762512207,
      "start_time": "2025-06-02T17:31:35.604754",
      "additional_data": {}
    },
    {
      "method_name": "test_startswith",
      "success": true,
      "error_message": null,
      "execution_time": 0.37546324729919434,
      "start_time": "2025-06-02T17:31:36.042303",
      "additional_data": {}
    },
    {
      "method_name": "test_uppercase",
      "success": true,
      "error_message": null,
      "execution_time": 0.3845231533050537,
      "start_time": "2025-06-02T17:31:36.417809",
      "additional_data": {}
    }
  ]
}